name: Docker-arrch64-mini

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["ARMv8-Mini-OpenWrt"]  # 监听的工作流名称
    types:
      - completed  # 仅在指定工作流完成时触发

env:
  DOCKER_BUILD: buildImageX.sh
  DOCKER_IMAGE: zhaoweiwen123/openwrt-aarch64
  TAG: mini
  TZ: Asia/Shanghai

jobs:
  Build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout Source Code
      uses: actions/checkout@main

    - name: Download Firmware from Releases
      run: |
        # 下载docker
        curl -fsSL https://get.docker.com | bash -s docker
        
        # 设置下载 URL 和文件名
        DOWNLOAD_URL="openwrt-armvirt-64-generic-rootfs.tar.gz https://github.com/oppen321/OpenWrt-armvirt/releases/download/ROOTFS_MINI/openwrt-armvirt-64-generic-rootfs.tar.gz"

        
        # 下载固件文件
        curl -L -o $DOWNLOAD_URL

        # 拷贝 rootfs 文件到 docker 目录
        cp openwrt-armvirt-64-generic-rootfs.tar.gz $GITHUB_WORKSPACE/docker/

    - name: 构建镜像
      run: |
        cd $GITHUB_WORKSPACE/docker
        chmod +x $GITHUB_WORKSPACE/docker/*/*
        chmod +x $DOCKER_BUILD && ./$DOCKER_BUILD 
    

    - name: Set up QEMU
      uses: docker/setup-qemu-action@master

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@master

    - name: Login to Docker Hub
      uses: docker/login-action@master
      with:
         username: ${{ secrets.DOCKER_USERNAME }}
         password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker
      uses: docker/build-push-action@master
      with:
        context: docker
        platforms: linux/arm64
        push: true
        tags: |
          ${{ env.DOCKER_IMAGE }}:${{ env.TAG }}
